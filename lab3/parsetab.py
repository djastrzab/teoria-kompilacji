
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEnonassoc=ASSIGNPLUSASSIGNMINUSASSIGNTIMESASSIGNDIVIDEnonassoc<>EQNEQLEQGEQleft+-left*/left\'rightUNARYASSIGNDIVIDE ASSIGNMINUS ASSIGNPLUS ASSIGNTIMES BREAK CONTINUE ELSE EQ EYE FLOATNUMBER FOR GEQ ID IF INTNUMBER LEQ MDIVIDE MMINUS MPLUS MTIMES NEQ ONES PRINT RETURN STRING WHILE ZEROSstart : \n            | morestatementsmorestatements : statement\n                    |  statement morestatements\n                    | \'{\' morestatements \'}\'statement : ifstatement\n                | loop\n                | expr \';\'\n                | returnstatement \';\'\n                | assignstatement \';\'\n                | printstatement \';\'\n                | BREAK \';\'\n                | CONTINUE \';\'returnstatement : RETURN \n                        | RETURN exprprintstatement : PRINT printablesprintables : printable\n                | printable \',\' printablesprintable : exprprintable : STRINGassignstatement : assignable \'=\' expr\n                        | assignable ASSIGNPLUS expr\n                        | assignable ASSIGNMINUS expr\n                        | assignable ASSIGNTIMES expr\n                        | assignable ASSIGNDIVIDE exprassignable : ID\n                    | ID \'[\' expr \',\' expr \']\'expr :  assignableexpr :  INTNUMBER\n            | FLOATNUMBER\n            | \'-\' expr %prec UNARY\n            | expr "\'"\n            | specialmatrixword \'(\' expr \')\'\n            | \'(\' expr \')\' \n            | \'[\' matrixinitializer \']\'\n            | expr \'+\' expr\n            | expr \'-\' expr\n            | expr \'*\' expr\n            | expr \'/\' expr\n            | expr MPLUS expr\n            | expr MMINUS expr\n            | expr MTIMES expr\n            | expr MDIVIDE expr\n            | expr EQ expr\n            | expr NEQ expr\n            | expr \'>\' expr\n            | expr \'<\' expr\n            | expr LEQ expr\n            | expr GEQ expr\n            specialmatrixword : ZEROS\n                            | ONES\n                            | EYEifstatement : IF \'(\' expr \')\' morestatements %prec IFX\n                    | IF \'(\' expr \')\' morestatements ELSE morestatementsloop : forloop\n            | whileloopforloop : FOR ID \'=\' rangeoperator morestatementswhileloop : WHILE \'(\' expr \')\' morestatementsrangeoperator : expr \':\' expr matrixinitializer : \'[\' innerlist  \']\'\n                        | vector \',\' \'[\' innerlist \']\' vector : \'[\' innerlist  \']\'\n              | vector \',\' \'[\' innerlist  \']\'innerlist : expr  \n                | innerlist \',\' expr'
    
_lr_action_items = {'$end':([0,1,2,3,5,6,15,16,31,33,49,50,51,52,53,75,116,119,122,127,],[-1,0,-2,-3,-6,-7,-55,-56,-4,-8,-9,-10,-11,-12,-13,-5,-53,-57,-58,-54,]),'{':([0,3,4,5,6,15,16,18,19,26,31,33,34,49,50,51,52,53,56,62,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,106,107,112,115,116,119,122,123,125,126,127,],[4,4,4,-6,-7,-55,-56,-29,-30,-26,-4,-8,-32,-9,-10,-11,-12,-13,-28,-31,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,4,-33,4,4,-53,-57,-58,4,-59,-27,-54,]),'BREAK':([0,3,4,5,6,15,16,18,19,26,31,33,34,49,50,51,52,53,56,62,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,106,107,112,115,116,119,122,123,125,126,127,],[11,11,11,-6,-7,-55,-56,-29,-30,-26,-4,-8,-32,-9,-10,-11,-12,-13,-28,-31,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,11,-33,11,11,-53,-57,-58,11,-59,-27,-54,]),'CONTINUE':([0,3,4,5,6,15,16,18,19,26,31,33,34,49,50,51,52,53,56,62,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,106,107,112,115,116,119,122,123,125,126,127,],[12,12,12,-6,-7,-55,-56,-29,-30,-26,-4,-8,-32,-9,-10,-11,-12,-13,-28,-31,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,12,-33,12,12,-53,-57,-58,12,-59,-27,-54,]),'IF':([0,3,4,5,6,15,16,18,19,26,31,33,34,49,50,51,52,53,56,62,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,106,107,112,115,116,119,122,123,125,126,127,],[13,13,13,-6,-7,-55,-56,-29,-30,-26,-4,-8,-32,-9,-10,-11,-12,-13,-28,-31,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,13,-33,13,13,-53,-57,-58,13,-59,-27,-54,]),'INTNUMBER':([0,3,4,5,6,14,15,16,18,19,20,23,24,26,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,102,103,106,107,109,110,112,114,115,116,119,120,122,123,125,126,127,],[18,18,18,-6,-7,18,-55,-56,-29,-30,18,18,18,-26,-4,-8,-32,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-9,-10,-11,-12,-13,18,-28,18,18,18,18,18,-31,18,18,18,18,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,18,18,18,-33,18,18,18,18,18,-53,-57,18,-58,18,-59,-27,-54,]),'FLOATNUMBER':([0,3,4,5,6,14,15,16,18,19,20,23,24,26,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,102,103,106,107,109,110,112,114,115,116,119,120,122,123,125,126,127,],[19,19,19,-6,-7,19,-55,-56,-29,-30,19,19,19,-26,-4,-8,-32,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-9,-10,-11,-12,-13,19,-28,19,19,19,19,19,-31,19,19,19,19,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,19,19,19,-33,19,19,19,19,19,-53,-57,19,-58,19,-59,-27,-54,]),'-':([0,3,4,5,6,7,14,15,16,17,18,19,20,23,24,26,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,109,110,112,113,114,115,116,117,119,120,121,122,123,125,126,127,],[20,20,20,-6,-7,36,20,-55,-56,-28,-29,-30,20,20,20,-26,-4,-8,-32,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-9,-10,-11,-12,-13,20,36,-28,20,20,20,20,20,-31,20,20,36,36,20,20,-5,-36,-37,-38,-39,36,36,36,36,36,36,36,36,36,36,36,-34,36,36,36,36,36,36,36,-35,20,20,36,36,20,-33,20,20,20,36,20,20,-53,36,-57,20,36,-58,20,36,-27,-54,]),'(':([0,3,4,5,6,13,14,15,16,18,19,20,21,23,24,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,102,103,106,107,109,110,112,114,115,116,119,120,122,123,125,126,127,],[14,14,14,-6,-7,54,14,-55,-56,-29,-30,14,63,14,14,-26,74,-50,-51,-52,-4,-8,-32,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-9,-10,-11,-12,-13,14,-28,14,14,14,14,14,-31,14,14,14,14,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,14,14,14,-33,14,14,14,14,14,-53,-57,14,-58,14,-59,-27,-54,]),'[':([0,3,4,5,6,14,15,16,18,19,20,22,23,24,26,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,101,102,103,106,107,109,110,112,114,115,116,119,120,122,123,125,126,127,],[22,22,22,-6,-7,22,-55,-56,-29,-30,22,64,22,22,73,-4,-8,-32,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-9,-10,-11,-12,-13,22,-28,22,22,22,22,22,-31,22,22,22,22,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,110,22,22,22,-33,22,22,22,22,22,-53,-57,22,-58,22,-59,-27,-54,]),'RETURN':([0,3,4,5,6,15,16,18,19,26,31,33,34,49,50,51,52,53,56,62,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,106,107,112,115,116,119,122,123,125,126,127,],[23,23,23,-6,-7,-55,-56,-29,-30,-26,-4,-8,-32,-9,-10,-11,-12,-13,-28,-31,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,23,-33,23,23,-53,-57,-58,23,-59,-27,-54,]),'PRINT':([0,3,4,5,6,15,16,18,19,26,31,33,34,49,50,51,52,53,56,62,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,106,107,112,115,116,119,122,123,125,126,127,],[24,24,24,-6,-7,-55,-56,-29,-30,-26,-4,-8,-32,-9,-10,-11,-12,-13,-28,-31,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,24,-33,24,24,-53,-57,-58,24,-59,-27,-54,]),'FOR':([0,3,4,5,6,15,16,18,19,26,31,33,34,49,50,51,52,53,56,62,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,106,107,112,115,116,119,122,123,125,126,127,],[25,25,25,-6,-7,-55,-56,-29,-30,-26,-4,-8,-32,-9,-10,-11,-12,-13,-28,-31,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,25,-33,25,25,-53,-57,-58,25,-59,-27,-54,]),'WHILE':([0,3,4,5,6,15,16,18,19,26,31,33,34,49,50,51,52,53,56,62,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,106,107,112,115,116,119,122,123,125,126,127,],[27,27,27,-6,-7,-55,-56,-29,-30,-26,-4,-8,-32,-9,-10,-11,-12,-13,-28,-31,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,27,-33,27,27,-53,-57,-58,27,-59,-27,-54,]),'ID':([0,3,4,5,6,14,15,16,18,19,20,23,24,25,26,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,102,103,106,107,109,110,112,114,115,116,119,120,122,123,125,126,127,],[26,26,26,-6,-7,26,-55,-56,-29,-30,26,26,26,72,-26,-4,-8,-32,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-9,-10,-11,-12,-13,26,-28,26,26,26,26,26,-31,26,26,26,26,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,26,26,26,-33,26,26,26,26,26,-53,-57,26,-58,26,-59,-27,-54,]),'ZEROS':([0,3,4,5,6,14,15,16,18,19,20,23,24,26,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,102,103,106,107,109,110,112,114,115,116,119,120,122,123,125,126,127,],[28,28,28,-6,-7,28,-55,-56,-29,-30,28,28,28,-26,-4,-8,-32,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-9,-10,-11,-12,-13,28,-28,28,28,28,28,28,-31,28,28,28,28,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,28,28,28,-33,28,28,28,28,28,-53,-57,28,-58,28,-59,-27,-54,]),'ONES':([0,3,4,5,6,14,15,16,18,19,20,23,24,26,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,102,103,106,107,109,110,112,114,115,116,119,120,122,123,125,126,127,],[29,29,29,-6,-7,29,-55,-56,-29,-30,29,29,29,-26,-4,-8,-32,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-9,-10,-11,-12,-13,29,-28,29,29,29,29,29,-31,29,29,29,29,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,29,29,29,-33,29,29,29,29,29,-53,-57,29,-58,29,-59,-27,-54,]),'EYE':([0,3,4,5,6,14,15,16,18,19,20,23,24,26,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,102,103,106,107,109,110,112,114,115,116,119,120,122,123,125,126,127,],[30,30,30,-6,-7,30,-55,-56,-29,-30,30,30,30,-26,-4,-8,-32,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-9,-10,-11,-12,-13,30,-28,30,30,30,30,30,-31,30,30,30,30,-5,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,30,30,30,-33,30,30,30,30,30,-53,-57,30,-58,30,-59,-27,-54,]),'}':([3,5,6,15,16,31,32,33,49,50,51,52,53,75,116,119,122,127,],[-3,-6,-7,-55,-56,-4,75,-8,-9,-10,-11,-12,-13,-5,-53,-57,-58,-54,]),'ELSE':([3,5,6,15,16,31,33,49,50,51,52,53,75,116,119,122,127,],[-3,-6,-7,-55,-56,-4,-8,-9,-10,-11,-12,-13,-5,123,-57,-58,-54,]),';':([7,8,9,10,11,12,17,18,19,23,26,34,56,62,67,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,100,107,111,126,],[33,49,50,51,52,53,-28,-29,-30,-14,-26,-32,-28,-31,-15,-16,-17,-19,-20,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-21,-22,-23,-24,-25,-35,-33,-18,-27,]),"'":([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[34,-28,-29,-30,-26,-32,34,-28,-31,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-34,34,34,34,34,34,34,34,-35,34,34,-33,34,34,34,34,-27,]),'+':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[35,-28,-29,-30,-26,-32,35,-28,-31,35,35,-36,-37,-38,-39,35,35,35,35,35,35,35,35,35,35,35,-34,35,35,35,35,35,35,35,-35,35,35,-33,35,35,35,35,-27,]),'*':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[37,-28,-29,-30,-26,-32,37,-28,-31,37,37,37,37,-38,-39,37,37,37,37,37,37,37,37,37,37,37,-34,37,37,37,37,37,37,37,-35,37,37,-33,37,37,37,37,-27,]),'/':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[38,-28,-29,-30,-26,-32,38,-28,-31,38,38,38,38,-38,-39,38,38,38,38,38,38,38,38,38,38,38,-34,38,38,38,38,38,38,38,-35,38,38,-33,38,38,38,38,-27,]),'MPLUS':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[39,-28,-29,-30,-26,-32,39,-28,-31,39,39,-36,-37,-38,-39,39,39,39,39,-44,-45,-46,-47,-48,-49,39,-34,39,39,39,39,39,39,39,-35,39,39,-33,39,39,39,39,-27,]),'MMINUS':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[40,-28,-29,-30,-26,-32,40,-28,-31,40,40,-36,-37,-38,-39,40,40,40,40,-44,-45,-46,-47,-48,-49,40,-34,40,40,40,40,40,40,40,-35,40,40,-33,40,40,40,40,-27,]),'MTIMES':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[41,-28,-29,-30,-26,-32,41,-28,-31,41,41,-36,-37,-38,-39,41,41,41,41,-44,-45,-46,-47,-48,-49,41,-34,41,41,41,41,41,41,41,-35,41,41,-33,41,41,41,41,-27,]),'MDIVIDE':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[42,-28,-29,-30,-26,-32,42,-28,-31,42,42,-36,-37,-38,-39,42,42,42,42,-44,-45,-46,-47,-48,-49,42,-34,42,42,42,42,42,42,42,-35,42,42,-33,42,42,42,42,-27,]),'EQ':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[43,-28,-29,-30,-26,-32,43,-28,-31,43,43,-36,-37,-38,-39,43,43,43,43,None,None,None,None,None,None,43,-34,43,43,43,43,43,43,43,-35,43,43,-33,43,43,43,43,-27,]),'NEQ':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[44,-28,-29,-30,-26,-32,44,-28,-31,44,44,-36,-37,-38,-39,44,44,44,44,None,None,None,None,None,None,44,-34,44,44,44,44,44,44,44,-35,44,44,-33,44,44,44,44,-27,]),'>':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[45,-28,-29,-30,-26,-32,45,-28,-31,45,45,-36,-37,-38,-39,45,45,45,45,None,None,None,None,None,None,45,-34,45,45,45,45,45,45,45,-35,45,45,-33,45,45,45,45,-27,]),'<':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[46,-28,-29,-30,-26,-32,46,-28,-31,46,46,-36,-37,-38,-39,46,46,46,46,None,None,None,None,None,None,46,-34,46,46,46,46,46,46,46,-35,46,46,-33,46,46,46,46,-27,]),'LEQ':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[47,-28,-29,-30,-26,-32,47,-28,-31,47,47,-36,-37,-38,-39,47,47,47,47,None,None,None,None,None,None,47,-34,47,47,47,47,47,47,47,-35,47,47,-33,47,47,47,47,-27,]),'GEQ':([7,17,18,19,26,34,55,56,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,104,105,107,113,117,121,125,126,],[48,-28,-29,-30,-26,-32,48,-28,-31,48,48,-36,-37,-38,-39,48,48,48,48,None,None,None,None,None,None,48,-34,48,48,48,48,48,48,48,-35,48,48,-33,48,48,48,48,-27,]),'=':([17,26,72,126,],[57,-26,103,-27,]),'ASSIGNPLUS':([17,26,126,],[58,-26,-27,]),'ASSIGNMINUS':([17,26,126,],[59,-26,-27,]),'ASSIGNTIMES':([17,26,126,],[60,-26,-27,]),'ASSIGNDIVIDE':([17,26,126,],[61,-26,-27,]),')':([18,19,26,34,55,56,62,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,97,100,105,107,126,],[-29,-30,-26,-32,91,-28,-31,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,106,-34,107,-35,115,-33,-27,]),',':([18,19,26,34,56,62,66,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,98,99,100,104,107,108,117,118,124,126,],[-29,-30,-26,-32,-28,-31,101,102,-19,-20,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,109,-64,-35,114,-33,-62,-65,109,-63,-27,]),']':([18,19,26,34,56,62,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,98,99,100,107,108,117,118,121,124,126,],[-29,-30,-26,-32,-28,-31,100,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,108,-64,-35,-33,-60,-65,124,126,-61,-27,]),':':([18,19,26,34,56,62,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,107,113,126,],[-29,-30,-26,-32,-28,-31,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-34,-35,-33,120,-27,]),'STRING':([24,102,],[71,71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'morestatements':([0,3,4,106,112,115,123,],[2,31,32,116,119,122,127,]),'statement':([0,3,4,106,112,115,123,],[3,3,3,3,3,3,3,]),'ifstatement':([0,3,4,106,112,115,123,],[5,5,5,5,5,5,5,]),'loop':([0,3,4,106,112,115,123,],[6,6,6,6,6,6,6,]),'expr':([0,3,4,14,20,23,24,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,57,58,59,60,61,63,64,73,74,102,103,106,109,110,112,114,115,120,123,],[7,7,7,55,62,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,99,104,105,70,113,7,117,99,7,121,7,125,7,]),'returnstatement':([0,3,4,106,112,115,123,],[8,8,8,8,8,8,8,]),'assignstatement':([0,3,4,106,112,115,123,],[9,9,9,9,9,9,9,]),'printstatement':([0,3,4,106,112,115,123,],[10,10,10,10,10,10,10,]),'forloop':([0,3,4,106,112,115,123,],[15,15,15,15,15,15,15,]),'whileloop':([0,3,4,106,112,115,123,],[16,16,16,16,16,16,16,]),'assignable':([0,3,4,14,20,23,24,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,57,58,59,60,61,63,64,73,74,102,103,106,109,110,112,114,115,120,123,],[17,17,17,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,17,56,56,17,56,17,56,17,]),'specialmatrixword':([0,3,4,14,20,23,24,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,57,58,59,60,61,63,64,73,74,102,103,106,109,110,112,114,115,120,123,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'matrixinitializer':([22,],[65,]),'vector':([22,],[66,]),'printables':([24,102,],[68,111,]),'printable':([24,102,],[69,69,]),'innerlist':([64,110,],[98,118,]),'rangeoperator':([103,],[112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> <empty>','start',0,'p_start','Mparser.py',33),
  ('start -> morestatements','start',1,'p_start','Mparser.py',34),
  ('morestatements -> statement','morestatements',1,'p_more_statements','Mparser.py',39),
  ('morestatements -> statement morestatements','morestatements',2,'p_more_statements','Mparser.py',40),
  ('morestatements -> { morestatements }','morestatements',3,'p_more_statements','Mparser.py',41),
  ('statement -> ifstatement','statement',1,'p_statement','Mparser.py',51),
  ('statement -> loop','statement',1,'p_statement','Mparser.py',52),
  ('statement -> expr ;','statement',2,'p_statement','Mparser.py',53),
  ('statement -> returnstatement ;','statement',2,'p_statement','Mparser.py',54),
  ('statement -> assignstatement ;','statement',2,'p_statement','Mparser.py',55),
  ('statement -> printstatement ;','statement',2,'p_statement','Mparser.py',56),
  ('statement -> BREAK ;','statement',2,'p_statement','Mparser.py',57),
  ('statement -> CONTINUE ;','statement',2,'p_statement','Mparser.py',58),
  ('returnstatement -> RETURN','returnstatement',1,'p_return_statement','Mparser.py',68),
  ('returnstatement -> RETURN expr','returnstatement',2,'p_return_statement','Mparser.py',69),
  ('printstatement -> PRINT printables','printstatement',2,'p_print_statement','Mparser.py',77),
  ('printables -> printable','printables',1,'p_printables','Mparser.py',81),
  ('printables -> printable , printables','printables',3,'p_printables','Mparser.py',82),
  ('printable -> expr','printable',1,'p_pritable1','Mparser.py',90),
  ('printable -> STRING','printable',1,'p_pritable2','Mparser.py',94),
  ('assignstatement -> assignable = expr','assignstatement',3,'p_assign_statement','Mparser.py',99),
  ('assignstatement -> assignable ASSIGNPLUS expr','assignstatement',3,'p_assign_statement','Mparser.py',100),
  ('assignstatement -> assignable ASSIGNMINUS expr','assignstatement',3,'p_assign_statement','Mparser.py',101),
  ('assignstatement -> assignable ASSIGNTIMES expr','assignstatement',3,'p_assign_statement','Mparser.py',102),
  ('assignstatement -> assignable ASSIGNDIVIDE expr','assignstatement',3,'p_assign_statement','Mparser.py',103),
  ('assignable -> ID','assignable',1,'p_assignable','Mparser.py',108),
  ('assignable -> ID [ expr , expr ]','assignable',6,'p_assignable','Mparser.py',109),
  ('expr -> assignable','expr',1,'p_expr1','Mparser.py',116),
  ('expr -> INTNUMBER','expr',1,'p_expr2','Mparser.py',120),
  ('expr -> FLOATNUMBER','expr',1,'p_expr2','Mparser.py',121),
  ('expr -> - expr','expr',2,'p_expr2','Mparser.py',122),
  ("expr -> expr '",'expr',2,'p_expr2','Mparser.py',123),
  ('expr -> specialmatrixword ( expr )','expr',4,'p_expr2','Mparser.py',124),
  ('expr -> ( expr )','expr',3,'p_expr2','Mparser.py',125),
  ('expr -> [ matrixinitializer ]','expr',3,'p_expr2','Mparser.py',126),
  ('expr -> expr + expr','expr',3,'p_expr2','Mparser.py',127),
  ('expr -> expr - expr','expr',3,'p_expr2','Mparser.py',128),
  ('expr -> expr * expr','expr',3,'p_expr2','Mparser.py',129),
  ('expr -> expr / expr','expr',3,'p_expr2','Mparser.py',130),
  ('expr -> expr MPLUS expr','expr',3,'p_expr2','Mparser.py',131),
  ('expr -> expr MMINUS expr','expr',3,'p_expr2','Mparser.py',132),
  ('expr -> expr MTIMES expr','expr',3,'p_expr2','Mparser.py',133),
  ('expr -> expr MDIVIDE expr','expr',3,'p_expr2','Mparser.py',134),
  ('expr -> expr EQ expr','expr',3,'p_expr2','Mparser.py',135),
  ('expr -> expr NEQ expr','expr',3,'p_expr2','Mparser.py',136),
  ('expr -> expr > expr','expr',3,'p_expr2','Mparser.py',137),
  ('expr -> expr < expr','expr',3,'p_expr2','Mparser.py',138),
  ('expr -> expr LEQ expr','expr',3,'p_expr2','Mparser.py',139),
  ('expr -> expr GEQ expr','expr',3,'p_expr2','Mparser.py',140),
  ('specialmatrixword -> ZEROS','specialmatrixword',1,'p_special_matrix_word','Mparser.py',159),
  ('specialmatrixword -> ONES','specialmatrixword',1,'p_special_matrix_word','Mparser.py',160),
  ('specialmatrixword -> EYE','specialmatrixword',1,'p_special_matrix_word','Mparser.py',161),
  ('ifstatement -> IF ( expr ) morestatements','ifstatement',5,'p_if_statement','Mparser.py',166),
  ('ifstatement -> IF ( expr ) morestatements ELSE morestatements','ifstatement',7,'p_if_statement','Mparser.py',167),
  ('loop -> forloop','loop',1,'p_loop','Mparser.py',174),
  ('loop -> whileloop','loop',1,'p_loop','Mparser.py',175),
  ('forloop -> FOR ID = rangeoperator morestatements','forloop',5,'p_for_loop','Mparser.py',180),
  ('whileloop -> WHILE ( expr ) morestatements','whileloop',5,'p_while_loop','Mparser.py',185),
  ('rangeoperator -> expr : expr','rangeoperator',3,'p_range_op','Mparser.py',190),
  ('matrixinitializer -> [ innerlist ]','matrixinitializer',3,'p_matrix_initializer','Mparser.py',195),
  ('matrixinitializer -> vector , [ innerlist ]','matrixinitializer',5,'p_matrix_initializer','Mparser.py',196),
  ('vector -> [ innerlist ]','vector',3,'p_vector','Mparser.py',204),
  ('vector -> vector , [ innerlist ]','vector',5,'p_vector','Mparser.py',205),
  ('innerlist -> expr','innerlist',1,'p_innerlist','Mparser.py',213),
  ('innerlist -> innerlist , expr','innerlist',3,'p_innerlist','Mparser.py',214),
]
