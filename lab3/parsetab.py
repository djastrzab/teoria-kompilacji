
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEnonassoc=ASSIGNPLUSASSIGNMINUSASSIGNTIMESASSIGNDIVIDEnonassoc<>EQNEQLEQGEQleft+-left*/left\'rightUNARYASSIGNDIVIDE ASSIGNMINUS ASSIGNPLUS ASSIGNTIMES BREAK CONTINUE ELSE EQ EYE FLOATNUMBER FOR GEQ ID IF INTNUMBER LEQ MDIVIDE MMINUS MPLUS MTIMES NEQ ONES PRINT RETURN STRING WHILE ZEROSstart : \n            | morestatementsmorestatements : statement\n                    |  statement morestatements\n                    | \'{\' morestatements \'}\'statement : ifstatement\n                | loop\n                | expr \';\'\n                | returnstatement \';\'\n                | assignstatement \';\'\n                | printstatement \';\'\n                | BREAK \';\'\n                | CONTINUE \';\'returnstatement : RETURN \n                        | RETURN exprprintstatement : PRINT printablesprintables : printable\n                | printables \',\' printableprintable : expr\n                | STRINGassignstatement : assignable \'=\' expr\n                        | assignable ASSIGNPLUS expr\n                        | assignable ASSIGNMINUS expr\n                        | assignable ASSIGNTIMES expr\n                        | assignable ASSIGNDIVIDE exprassignable : ID\n                    | matrixaccessmatrixaccess : ID \'[\' expr \',\' expr \']\'expr : assignable\n            | INTNUMBER\n            | FLOATNUMBER\n            | \'[\' matrixinitializer \']\'\n            | specialmatrixword \'(\' expr \')\'\n            | \'-\' expr %prec UNARY\n            | expr "\'"\n            | \'(\' expr \')\' \n            | expr \'+\' expr\n            | expr \'-\' expr\n            | expr \'*\' expr\n            | expr \'/\' expr\n            | expr MPLUS expr\n            | expr MMINUS expr\n            | expr MTIMES expr\n            | expr MDIVIDE expr\n            | expr EQ expr\n            | expr NEQ expr\n            | expr \'>\' expr\n            | expr \'<\' expr\n            | expr LEQ expr\n            | expr GEQ expr\n            specialmatrixword : ZEROS\n                            | ONES\n                            | EYEifstatement : IF \'(\' expr \')\' morestatements %prec IFX\n                    | IF \'(\' expr \')\' morestatements ELSE morestatementsloop : forloop\n            | whileloopforloop : FOR ID \'=\' rangeoperator morestatementswhileloop : WHILE \'(\' expr \')\' morestatementsrangeoperator : expr \':\' expr matrixinitializer : \'[\' innerlist  \']\'\n                        | matrixinitializer \',\' \'[\' innerlist \']\' innerlist : expr  \n                | innerlist \',\' expr'
    
_lr_action_items = {'$end':([0,1,2,3,5,6,15,16,32,34,50,51,52,53,54,75,116,119,122,127,],[-1,0,-2,-3,-6,-7,-56,-57,-4,-8,-9,-10,-11,-12,-13,-5,-54,-58,-59,-55,]),'{':([0,3,4,5,6,15,16,18,19,26,28,32,34,35,50,51,52,53,54,57,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,106,110,112,115,116,119,122,123,125,126,127,],[4,4,4,-6,-7,-56,-57,-30,-31,-26,-27,-4,-8,-35,-9,-10,-11,-12,-13,-29,-34,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,4,-33,4,4,-54,-58,-59,4,-60,-28,-55,]),'BREAK':([0,3,4,5,6,15,16,18,19,26,28,32,34,35,50,51,52,53,54,57,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,106,110,112,115,116,119,122,123,125,126,127,],[11,11,11,-6,-7,-56,-57,-30,-31,-26,-27,-4,-8,-35,-9,-10,-11,-12,-13,-29,-34,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,11,-33,11,11,-54,-58,-59,11,-60,-28,-55,]),'CONTINUE':([0,3,4,5,6,15,16,18,19,26,28,32,34,35,50,51,52,53,54,57,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,106,110,112,115,116,119,122,123,125,126,127,],[12,12,12,-6,-7,-56,-57,-30,-31,-26,-27,-4,-8,-35,-9,-10,-11,-12,-13,-29,-34,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,12,-33,12,12,-54,-58,-59,12,-60,-28,-55,]),'IF':([0,3,4,5,6,15,16,18,19,26,28,32,34,35,50,51,52,53,54,57,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,106,110,112,115,116,119,122,123,125,126,127,],[13,13,13,-6,-7,-56,-57,-30,-31,-26,-27,-4,-8,-35,-9,-10,-11,-12,-13,-29,-34,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,13,-33,13,13,-54,-58,-59,13,-60,-28,-55,]),'INTNUMBER':([0,3,4,5,6,14,15,16,18,19,22,23,24,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,102,103,106,108,109,110,112,114,115,116,119,120,122,123,125,126,127,],[18,18,18,-6,-7,18,-56,-57,-30,-31,18,18,18,-26,-27,-4,-8,-35,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-9,-10,-11,-12,-13,18,-29,18,18,18,18,18,18,18,-34,18,18,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,18,18,18,18,18,-33,18,18,18,-54,-58,18,-59,18,-60,-28,-55,]),'FLOATNUMBER':([0,3,4,5,6,14,15,16,18,19,22,23,24,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,102,103,106,108,109,110,112,114,115,116,119,120,122,123,125,126,127,],[19,19,19,-6,-7,19,-56,-57,-30,-31,19,19,19,-26,-27,-4,-8,-35,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-9,-10,-11,-12,-13,19,-29,19,19,19,19,19,19,19,-34,19,19,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,19,19,19,19,19,-33,19,19,19,-54,-58,19,-59,19,-60,-28,-55,]),'[':([0,3,4,5,6,14,15,16,18,19,20,22,23,24,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,100,102,103,106,108,109,110,112,114,115,116,119,120,122,123,125,126,127,],[20,20,20,-6,-7,20,-56,-57,-30,-31,63,20,20,20,73,-27,-4,-8,-35,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-9,-10,-11,-12,-13,20,-29,20,20,20,20,20,20,20,-34,20,20,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,109,20,20,20,20,20,-33,20,20,20,-54,-58,20,-59,20,-60,-28,-55,]),'-':([0,3,4,5,6,7,14,15,16,17,18,19,22,23,24,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,102,103,104,105,106,108,109,110,112,113,114,115,116,117,119,120,121,122,123,125,126,127,],[22,22,22,-6,-7,37,22,-56,-57,-29,-30,-31,22,22,22,-26,-27,-4,-8,-35,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-9,-10,-11,-12,-13,22,37,-29,22,22,22,22,22,22,22,-34,37,37,22,22,-5,-37,-38,-39,-40,37,37,37,37,37,37,37,37,37,37,37,-36,37,37,37,37,37,37,-32,37,22,22,37,37,22,22,22,-33,22,37,22,22,-54,37,-58,22,37,-59,22,37,-28,-55,]),'(':([0,3,4,5,6,13,14,15,16,18,19,21,22,23,24,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,102,103,106,108,109,110,112,114,115,116,119,120,122,123,125,126,127,],[14,14,14,-6,-7,55,14,-56,-57,-30,-31,65,14,14,14,-26,74,-27,-51,-52,-53,-4,-8,-35,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-9,-10,-11,-12,-13,14,-29,14,14,14,14,14,14,14,-34,14,14,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,14,14,14,14,14,-33,14,14,14,-54,-58,14,-59,14,-60,-28,-55,]),'RETURN':([0,3,4,5,6,15,16,18,19,26,28,32,34,35,50,51,52,53,54,57,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,106,110,112,115,116,119,122,123,125,126,127,],[23,23,23,-6,-7,-56,-57,-30,-31,-26,-27,-4,-8,-35,-9,-10,-11,-12,-13,-29,-34,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,23,-33,23,23,-54,-58,-59,23,-60,-28,-55,]),'PRINT':([0,3,4,5,6,15,16,18,19,26,28,32,34,35,50,51,52,53,54,57,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,106,110,112,115,116,119,122,123,125,126,127,],[24,24,24,-6,-7,-56,-57,-30,-31,-26,-27,-4,-8,-35,-9,-10,-11,-12,-13,-29,-34,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,24,-33,24,24,-54,-58,-59,24,-60,-28,-55,]),'FOR':([0,3,4,5,6,15,16,18,19,26,28,32,34,35,50,51,52,53,54,57,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,106,110,112,115,116,119,122,123,125,126,127,],[25,25,25,-6,-7,-56,-57,-30,-31,-26,-27,-4,-8,-35,-9,-10,-11,-12,-13,-29,-34,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,25,-33,25,25,-54,-58,-59,25,-60,-28,-55,]),'WHILE':([0,3,4,5,6,15,16,18,19,26,28,32,34,35,50,51,52,53,54,57,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,106,110,112,115,116,119,122,123,125,126,127,],[27,27,27,-6,-7,-56,-57,-30,-31,-26,-27,-4,-8,-35,-9,-10,-11,-12,-13,-29,-34,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,27,-33,27,27,-54,-58,-59,27,-60,-28,-55,]),'ID':([0,3,4,5,6,14,15,16,18,19,22,23,24,25,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,102,103,106,108,109,110,112,114,115,116,119,120,122,123,125,126,127,],[26,26,26,-6,-7,26,-56,-57,-30,-31,26,26,26,72,-26,-27,-4,-8,-35,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-9,-10,-11,-12,-13,26,-29,26,26,26,26,26,26,26,-34,26,26,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,26,26,26,26,26,-33,26,26,26,-54,-58,26,-59,26,-60,-28,-55,]),'ZEROS':([0,3,4,5,6,14,15,16,18,19,22,23,24,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,102,103,106,108,109,110,112,114,115,116,119,120,122,123,125,126,127,],[29,29,29,-6,-7,29,-56,-57,-30,-31,29,29,29,-26,-27,-4,-8,-35,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-9,-10,-11,-12,-13,29,-29,29,29,29,29,29,29,29,-34,29,29,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,29,29,29,29,29,-33,29,29,29,-54,-58,29,-59,29,-60,-28,-55,]),'ONES':([0,3,4,5,6,14,15,16,18,19,22,23,24,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,102,103,106,108,109,110,112,114,115,116,119,120,122,123,125,126,127,],[30,30,30,-6,-7,30,-56,-57,-30,-31,30,30,30,-26,-27,-4,-8,-35,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-9,-10,-11,-12,-13,30,-29,30,30,30,30,30,30,30,-34,30,30,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,30,30,30,30,30,-33,30,30,30,-54,-58,30,-59,30,-60,-28,-55,]),'EYE':([0,3,4,5,6,14,15,16,18,19,22,23,24,26,28,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,102,103,106,108,109,110,112,114,115,116,119,120,122,123,125,126,127,],[31,31,31,-6,-7,31,-56,-57,-30,-31,31,31,31,-26,-27,-4,-8,-35,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-9,-10,-11,-12,-13,31,-29,31,31,31,31,31,31,31,-34,31,31,-5,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,31,31,31,31,31,-33,31,31,31,-54,-58,31,-59,31,-60,-28,-55,]),'}':([3,5,6,15,16,32,33,34,50,51,52,53,54,75,116,119,122,127,],[-3,-6,-7,-56,-57,-4,75,-8,-9,-10,-11,-12,-13,-5,-54,-58,-59,-55,]),'ELSE':([3,5,6,15,16,32,34,50,51,52,53,54,75,116,119,122,127,],[-3,-6,-7,-56,-57,-4,-8,-9,-10,-11,-12,-13,-5,123,-58,-59,-55,]),';':([7,8,9,10,11,12,17,18,19,23,26,28,35,57,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,99,110,111,126,],[34,50,51,52,53,54,-29,-30,-31,-14,-26,-27,-35,-29,-34,-15,-16,-17,-19,-20,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-21,-22,-23,-24,-25,-32,-33,-18,-28,]),"'":([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[35,-29,-30,-31,-26,-27,-35,35,-29,-34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-36,35,35,35,35,35,35,-32,35,35,35,-33,35,35,35,35,-28,]),'+':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[36,-29,-30,-31,-26,-27,-35,36,-29,-34,36,36,-37,-38,-39,-40,36,36,36,36,36,36,36,36,36,36,36,-36,36,36,36,36,36,36,-32,36,36,36,-33,36,36,36,36,-28,]),'*':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[38,-29,-30,-31,-26,-27,-35,38,-29,-34,38,38,38,38,-39,-40,38,38,38,38,38,38,38,38,38,38,38,-36,38,38,38,38,38,38,-32,38,38,38,-33,38,38,38,38,-28,]),'/':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[39,-29,-30,-31,-26,-27,-35,39,-29,-34,39,39,39,39,-39,-40,39,39,39,39,39,39,39,39,39,39,39,-36,39,39,39,39,39,39,-32,39,39,39,-33,39,39,39,39,-28,]),'MPLUS':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[40,-29,-30,-31,-26,-27,-35,40,-29,-34,40,40,-37,-38,-39,-40,40,40,40,40,-45,-46,-47,-48,-49,-50,40,-36,40,40,40,40,40,40,-32,40,40,40,-33,40,40,40,40,-28,]),'MMINUS':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[41,-29,-30,-31,-26,-27,-35,41,-29,-34,41,41,-37,-38,-39,-40,41,41,41,41,-45,-46,-47,-48,-49,-50,41,-36,41,41,41,41,41,41,-32,41,41,41,-33,41,41,41,41,-28,]),'MTIMES':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[42,-29,-30,-31,-26,-27,-35,42,-29,-34,42,42,-37,-38,-39,-40,42,42,42,42,-45,-46,-47,-48,-49,-50,42,-36,42,42,42,42,42,42,-32,42,42,42,-33,42,42,42,42,-28,]),'MDIVIDE':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[43,-29,-30,-31,-26,-27,-35,43,-29,-34,43,43,-37,-38,-39,-40,43,43,43,43,-45,-46,-47,-48,-49,-50,43,-36,43,43,43,43,43,43,-32,43,43,43,-33,43,43,43,43,-28,]),'EQ':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[44,-29,-30,-31,-26,-27,-35,44,-29,-34,44,44,-37,-38,-39,-40,44,44,44,44,None,None,None,None,None,None,44,-36,44,44,44,44,44,44,-32,44,44,44,-33,44,44,44,44,-28,]),'NEQ':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[45,-29,-30,-31,-26,-27,-35,45,-29,-34,45,45,-37,-38,-39,-40,45,45,45,45,None,None,None,None,None,None,45,-36,45,45,45,45,45,45,-32,45,45,45,-33,45,45,45,45,-28,]),'>':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[46,-29,-30,-31,-26,-27,-35,46,-29,-34,46,46,-37,-38,-39,-40,46,46,46,46,None,None,None,None,None,None,46,-36,46,46,46,46,46,46,-32,46,46,46,-33,46,46,46,46,-28,]),'<':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[47,-29,-30,-31,-26,-27,-35,47,-29,-34,47,47,-37,-38,-39,-40,47,47,47,47,None,None,None,None,None,None,47,-36,47,47,47,47,47,47,-32,47,47,47,-33,47,47,47,47,-28,]),'LEQ':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[48,-29,-30,-31,-26,-27,-35,48,-29,-34,48,48,-37,-38,-39,-40,48,48,48,48,None,None,None,None,None,None,48,-36,48,48,48,48,48,48,-32,48,48,48,-33,48,48,48,48,-28,]),'GEQ':([7,17,18,19,26,28,35,56,57,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,104,105,110,113,117,121,125,126,],[49,-29,-30,-31,-26,-27,-35,49,-29,-34,49,49,-37,-38,-39,-40,49,49,49,49,None,None,None,None,None,None,49,-36,49,49,49,49,49,49,-32,49,49,49,-33,49,49,49,49,-28,]),'=':([17,26,28,72,126,],[58,-26,-27,103,-28,]),'ASSIGNPLUS':([17,26,28,126,],[59,-26,-27,-28,]),'ASSIGNMINUS':([17,26,28,126,],[60,-26,-27,-28,]),'ASSIGNTIMES':([17,26,28,126,],[61,-26,-27,-28,]),'ASSIGNDIVIDE':([17,26,28,126,],[62,-26,-27,-28,]),')':([18,19,26,28,35,56,57,66,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,99,101,105,110,126,],[-30,-31,-26,-27,-35,91,-29,-34,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,106,-36,-32,110,115,-33,-28,]),',':([18,19,26,28,35,57,64,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,97,98,99,104,107,110,111,117,118,124,126,],[-30,-31,-26,-27,-35,-29,100,-34,102,-17,-19,-20,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,108,-63,-32,114,-61,-33,-18,-64,108,-62,-28,]),']':([18,19,26,28,35,57,64,66,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,97,98,99,107,110,117,118,121,124,126,],[-30,-31,-26,-27,-35,-29,99,-34,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,107,-63,-32,-61,-33,-64,124,126,-62,-28,]),':':([18,19,26,28,35,57,66,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,99,110,113,126,],[-30,-31,-26,-27,-35,-29,-34,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-36,-32,-33,120,-28,]),'STRING':([24,102,],[71,71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'morestatements':([0,3,4,106,112,115,123,],[2,32,33,116,119,122,127,]),'statement':([0,3,4,106,112,115,123,],[3,3,3,3,3,3,3,]),'ifstatement':([0,3,4,106,112,115,123,],[5,5,5,5,5,5,5,]),'loop':([0,3,4,106,112,115,123,],[6,6,6,6,6,6,6,]),'expr':([0,3,4,14,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,58,59,60,61,62,63,65,73,74,102,103,106,108,109,112,114,115,120,123,],[7,7,7,56,66,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,101,104,105,70,113,7,117,98,7,121,7,125,7,]),'returnstatement':([0,3,4,106,112,115,123,],[8,8,8,8,8,8,8,]),'assignstatement':([0,3,4,106,112,115,123,],[9,9,9,9,9,9,9,]),'printstatement':([0,3,4,106,112,115,123,],[10,10,10,10,10,10,10,]),'forloop':([0,3,4,106,112,115,123,],[15,15,15,15,15,15,15,]),'whileloop':([0,3,4,106,112,115,123,],[16,16,16,16,16,16,16,]),'assignable':([0,3,4,14,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,58,59,60,61,62,63,65,73,74,102,103,106,108,109,112,114,115,120,123,],[17,17,17,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,17,57,57,17,57,17,57,17,]),'specialmatrixword':([0,3,4,14,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,58,59,60,61,62,63,65,73,74,102,103,106,108,109,112,114,115,120,123,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'matrixaccess':([0,3,4,14,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,58,59,60,61,62,63,65,73,74,102,103,106,108,109,112,114,115,120,123,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'matrixinitializer':([20,],[64,]),'printables':([24,],[68,]),'printable':([24,102,],[69,111,]),'innerlist':([63,109,],[97,118,]),'rangeoperator':([103,],[112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> <empty>','start',0,'p_start','Mparser.py',33),
  ('start -> morestatements','start',1,'p_start','Mparser.py',34),
  ('morestatements -> statement','morestatements',1,'p_more_statements','Mparser.py',37),
  ('morestatements -> statement morestatements','morestatements',2,'p_more_statements','Mparser.py',38),
  ('morestatements -> { morestatements }','morestatements',3,'p_more_statements','Mparser.py',39),
  ('statement -> ifstatement','statement',1,'p_statement','Mparser.py',42),
  ('statement -> loop','statement',1,'p_statement','Mparser.py',43),
  ('statement -> expr ;','statement',2,'p_statement','Mparser.py',44),
  ('statement -> returnstatement ;','statement',2,'p_statement','Mparser.py',45),
  ('statement -> assignstatement ;','statement',2,'p_statement','Mparser.py',46),
  ('statement -> printstatement ;','statement',2,'p_statement','Mparser.py',47),
  ('statement -> BREAK ;','statement',2,'p_statement','Mparser.py',48),
  ('statement -> CONTINUE ;','statement',2,'p_statement','Mparser.py',49),
  ('returnstatement -> RETURN','returnstatement',1,'p_return_statement','Mparser.py',52),
  ('returnstatement -> RETURN expr','returnstatement',2,'p_return_statement','Mparser.py',53),
  ('printstatement -> PRINT printables','printstatement',2,'p_print_statement','Mparser.py',56),
  ('printables -> printable','printables',1,'p_printables','Mparser.py',59),
  ('printables -> printables , printable','printables',3,'p_printables','Mparser.py',60),
  ('printable -> expr','printable',1,'p_pritable','Mparser.py',63),
  ('printable -> STRING','printable',1,'p_pritable','Mparser.py',64),
  ('assignstatement -> assignable = expr','assignstatement',3,'p_assign_statement','Mparser.py',67),
  ('assignstatement -> assignable ASSIGNPLUS expr','assignstatement',3,'p_assign_statement','Mparser.py',68),
  ('assignstatement -> assignable ASSIGNMINUS expr','assignstatement',3,'p_assign_statement','Mparser.py',69),
  ('assignstatement -> assignable ASSIGNTIMES expr','assignstatement',3,'p_assign_statement','Mparser.py',70),
  ('assignstatement -> assignable ASSIGNDIVIDE expr','assignstatement',3,'p_assign_statement','Mparser.py',71),
  ('assignable -> ID','assignable',1,'p_assignable','Mparser.py',74),
  ('assignable -> matrixaccess','assignable',1,'p_assignable','Mparser.py',75),
  ('matrixaccess -> ID [ expr , expr ]','matrixaccess',6,'p_matrix_access','Mparser.py',78),
  ('expr -> assignable','expr',1,'p_expr','Mparser.py',81),
  ('expr -> INTNUMBER','expr',1,'p_expr','Mparser.py',82),
  ('expr -> FLOATNUMBER','expr',1,'p_expr','Mparser.py',83),
  ('expr -> [ matrixinitializer ]','expr',3,'p_expr','Mparser.py',84),
  ('expr -> specialmatrixword ( expr )','expr',4,'p_expr','Mparser.py',85),
  ('expr -> - expr','expr',2,'p_expr','Mparser.py',86),
  ("expr -> expr '",'expr',2,'p_expr','Mparser.py',87),
  ('expr -> ( expr )','expr',3,'p_expr','Mparser.py',88),
  ('expr -> expr + expr','expr',3,'p_expr','Mparser.py',89),
  ('expr -> expr - expr','expr',3,'p_expr','Mparser.py',90),
  ('expr -> expr * expr','expr',3,'p_expr','Mparser.py',91),
  ('expr -> expr / expr','expr',3,'p_expr','Mparser.py',92),
  ('expr -> expr MPLUS expr','expr',3,'p_expr','Mparser.py',93),
  ('expr -> expr MMINUS expr','expr',3,'p_expr','Mparser.py',94),
  ('expr -> expr MTIMES expr','expr',3,'p_expr','Mparser.py',95),
  ('expr -> expr MDIVIDE expr','expr',3,'p_expr','Mparser.py',96),
  ('expr -> expr EQ expr','expr',3,'p_expr','Mparser.py',97),
  ('expr -> expr NEQ expr','expr',3,'p_expr','Mparser.py',98),
  ('expr -> expr > expr','expr',3,'p_expr','Mparser.py',99),
  ('expr -> expr < expr','expr',3,'p_expr','Mparser.py',100),
  ('expr -> expr LEQ expr','expr',3,'p_expr','Mparser.py',101),
  ('expr -> expr GEQ expr','expr',3,'p_expr','Mparser.py',102),
  ('specialmatrixword -> ZEROS','specialmatrixword',1,'p_special_matrix_word','Mparser.py',106),
  ('specialmatrixword -> ONES','specialmatrixword',1,'p_special_matrix_word','Mparser.py',107),
  ('specialmatrixword -> EYE','specialmatrixword',1,'p_special_matrix_word','Mparser.py',108),
  ('ifstatement -> IF ( expr ) morestatements','ifstatement',5,'p_if_statement','Mparser.py',111),
  ('ifstatement -> IF ( expr ) morestatements ELSE morestatements','ifstatement',7,'p_if_statement','Mparser.py',112),
  ('loop -> forloop','loop',1,'p_loop','Mparser.py',115),
  ('loop -> whileloop','loop',1,'p_loop','Mparser.py',116),
  ('forloop -> FOR ID = rangeoperator morestatements','forloop',5,'p_for_loop','Mparser.py',119),
  ('whileloop -> WHILE ( expr ) morestatements','whileloop',5,'p_while_loop','Mparser.py',122),
  ('rangeoperator -> expr : expr','rangeoperator',3,'p_range_op','Mparser.py',125),
  ('matrixinitializer -> [ innerlist ]','matrixinitializer',3,'p_matrix_initializer','Mparser.py',128),
  ('matrixinitializer -> matrixinitializer , [ innerlist ]','matrixinitializer',5,'p_matrix_initializer','Mparser.py',129),
  ('innerlist -> expr','innerlist',1,'p_innerlist','Mparser.py',132),
  ('innerlist -> innerlist , expr','innerlist',3,'p_innerlist','Mparser.py',133),
]
